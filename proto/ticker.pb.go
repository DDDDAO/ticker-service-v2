// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.32.0
// 	protoc        v5.29.0
// source: proto/ticker.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Empty struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Empty) Reset() {
	*x = Empty{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_ticker_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Empty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Empty) ProtoMessage() {}

func (x *Empty) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ticker_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Empty.ProtoReflect.Descriptor instead.
func (*Empty) Descriptor() ([]byte, []int) {
	return file_proto_ticker_proto_rawDescGZIP(), []int{0}
}

type GetTickerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Exchange string `protobuf:"bytes,1,opt,name=exchange,proto3" json:"exchange,omitempty"`
	Symbol   string `protobuf:"bytes,2,opt,name=symbol,proto3" json:"symbol,omitempty"`
}

func (x *GetTickerRequest) Reset() {
	*x = GetTickerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_ticker_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTickerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTickerRequest) ProtoMessage() {}

func (x *GetTickerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ticker_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTickerRequest.ProtoReflect.Descriptor instead.
func (*GetTickerRequest) Descriptor() ([]byte, []int) {
	return file_proto_ticker_proto_rawDescGZIP(), []int{1}
}

func (x *GetTickerRequest) GetExchange() string {
	if x != nil {
		return x.Exchange
	}
	return ""
}

func (x *GetTickerRequest) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

type BatchTickerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Requests []*GetTickerRequest `protobuf:"bytes,1,rep,name=requests,proto3" json:"requests,omitempty"`
}

func (x *BatchTickerRequest) Reset() {
	*x = BatchTickerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_ticker_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BatchTickerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchTickerRequest) ProtoMessage() {}

func (x *BatchTickerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ticker_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchTickerRequest.ProtoReflect.Descriptor instead.
func (*BatchTickerRequest) Descriptor() ([]byte, []int) {
	return file_proto_ticker_proto_rawDescGZIP(), []int{2}
}

func (x *BatchTickerRequest) GetRequests() []*GetTickerRequest {
	if x != nil {
		return x.Requests
	}
	return nil
}

type BatchTickerResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tickers map[string]*TickerData `protobuf:"bytes,1,rep,name=tickers,proto3" json:"tickers,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"` // key: "exchange:symbol"
}

func (x *BatchTickerResponse) Reset() {
	*x = BatchTickerResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_ticker_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BatchTickerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchTickerResponse) ProtoMessage() {}

func (x *BatchTickerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ticker_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchTickerResponse.ProtoReflect.Descriptor instead.
func (*BatchTickerResponse) Descriptor() ([]byte, []int) {
	return file_proto_ticker_proto_rawDescGZIP(), []int{3}
}

func (x *BatchTickerResponse) GetTickers() map[string]*TickerData {
	if x != nil {
		return x.Tickers
	}
	return nil
}

type StreamTickerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Subscriptions []*GetTickerRequest `protobuf:"bytes,1,rep,name=subscriptions,proto3" json:"subscriptions,omitempty"`
}

func (x *StreamTickerRequest) Reset() {
	*x = StreamTickerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_ticker_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StreamTickerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamTickerRequest) ProtoMessage() {}

func (x *StreamTickerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ticker_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamTickerRequest.ProtoReflect.Descriptor instead.
func (*StreamTickerRequest) Descriptor() ([]byte, []int) {
	return file_proto_ticker_proto_rawDescGZIP(), []int{4}
}

func (x *StreamTickerRequest) GetSubscriptions() []*GetTickerRequest {
	if x != nil {
		return x.Subscriptions
	}
	return nil
}

type TickerData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Symbol    string  `protobuf:"bytes,1,opt,name=symbol,proto3" json:"symbol,omitempty"`
	Last      float64 `protobuf:"fixed64,2,opt,name=last,proto3" json:"last,omitempty"`
	Bid       float64 `protobuf:"fixed64,3,opt,name=bid,proto3" json:"bid,omitempty"`
	Ask       float64 `protobuf:"fixed64,4,opt,name=ask,proto3" json:"ask,omitempty"`
	High      float64 `protobuf:"fixed64,5,opt,name=high,proto3" json:"high,omitempty"`
	Low       float64 `protobuf:"fixed64,6,opt,name=low,proto3" json:"low,omitempty"`
	Volume    float64 `protobuf:"fixed64,7,opt,name=volume,proto3" json:"volume,omitempty"`
	Timestamp string  `protobuf:"bytes,8,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Exchange  string  `protobuf:"bytes,9,opt,name=exchange,proto3" json:"exchange,omitempty"`
}

func (x *TickerData) Reset() {
	*x = TickerData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_ticker_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TickerData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TickerData) ProtoMessage() {}

func (x *TickerData) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ticker_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TickerData.ProtoReflect.Descriptor instead.
func (*TickerData) Descriptor() ([]byte, []int) {
	return file_proto_ticker_proto_rawDescGZIP(), []int{5}
}

func (x *TickerData) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *TickerData) GetLast() float64 {
	if x != nil {
		return x.Last
	}
	return 0
}

func (x *TickerData) GetBid() float64 {
	if x != nil {
		return x.Bid
	}
	return 0
}

func (x *TickerData) GetAsk() float64 {
	if x != nil {
		return x.Ask
	}
	return 0
}

func (x *TickerData) GetHigh() float64 {
	if x != nil {
		return x.High
	}
	return 0
}

func (x *TickerData) GetLow() float64 {
	if x != nil {
		return x.Low
	}
	return 0
}

func (x *TickerData) GetVolume() float64 {
	if x != nil {
		return x.Volume
	}
	return 0
}

func (x *TickerData) GetTimestamp() string {
	if x != nil {
		return x.Timestamp
	}
	return ""
}

func (x *TickerData) GetExchange() string {
	if x != nil {
		return x.Exchange
	}
	return ""
}

type HealthResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status      string `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	StorageOk   bool   `protobuf:"varint,2,opt,name=storage_ok,json=storageOk,proto3" json:"storage_ok,omitempty"`
	StorageType string `protobuf:"bytes,3,opt,name=storage_type,json=storageType,proto3" json:"storage_type,omitempty"`
	Timestamp   string `protobuf:"bytes,4,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
}

func (x *HealthResponse) Reset() {
	*x = HealthResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_ticker_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HealthResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthResponse) ProtoMessage() {}

func (x *HealthResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ticker_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthResponse.ProtoReflect.Descriptor instead.
func (*HealthResponse) Descriptor() ([]byte, []int) {
	return file_proto_ticker_proto_rawDescGZIP(), []int{6}
}

func (x *HealthResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *HealthResponse) GetStorageOk() bool {
	if x != nil {
		return x.StorageOk
	}
	return false
}

func (x *HealthResponse) GetStorageType() string {
	if x != nil {
		return x.StorageType
	}
	return ""
}

func (x *HealthResponse) GetTimestamp() string {
	if x != nil {
		return x.Timestamp
	}
	return ""
}

var File_proto_ticker_proto protoreflect.FileDescriptor

var file_proto_ticker_proto_rawDesc = []byte{
	0x0a, 0x12, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x72, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x72, 0x22, 0x07, 0x0a, 0x05,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x46, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x54, 0x69, 0x63, 0x6b,
	0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x65, 0x78, 0x63,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x65, 0x78, 0x63,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x22, 0x4a, 0x0a,
	0x12, 0x42, 0x61, 0x74, 0x63, 0x68, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x34, 0x0a, 0x08, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x72, 0x2e, 0x47,
	0x65, 0x74, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52,
	0x08, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x22, 0xa9, 0x01, 0x0a, 0x13, 0x42, 0x61,
	0x74, 0x63, 0x68, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x42, 0x0a, 0x07, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x28, 0x2e, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x72, 0x2e, 0x42, 0x61, 0x74, 0x63,
	0x68, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e,
	0x54, 0x69, 0x63, 0x6b, 0x65, 0x72, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x74, 0x69,
	0x63, 0x6b, 0x65, 0x72, 0x73, 0x1a, 0x4e, 0x0a, 0x0c, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x72, 0x73,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x28, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x72, 0x2e,
	0x54, 0x69, 0x63, 0x6b, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x55, 0x0a, 0x13, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x54,
	0x69, 0x63, 0x6b, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3e, 0x0a, 0x0d,
	0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74,
	0x54, 0x69, 0x63, 0x6b, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x0d, 0x73,
	0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0xd4, 0x01, 0x0a,
	0x0a, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x79, 0x6d,
	0x62, 0x6f, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x61, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x04, 0x6c, 0x61, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x62, 0x69, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x03, 0x62, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x73, 0x6b,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x03, 0x61, 0x73, 0x6b, 0x12, 0x12, 0x0a, 0x04, 0x68,
	0x69, 0x67, 0x68, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x04, 0x68, 0x69, 0x67, 0x68, 0x12,
	0x10, 0x0a, 0x03, 0x6c, 0x6f, 0x77, 0x18, 0x06, 0x20, 0x01, 0x28, 0x01, 0x52, 0x03, 0x6c, 0x6f,
	0x77, 0x12, 0x16, 0x0a, 0x06, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x06, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x1a, 0x0a, 0x08, 0x65, 0x78, 0x63, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x65, 0x78, 0x63, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x22, 0x88, 0x01, 0x0a, 0x0e, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1d,
	0x0a, 0x0a, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x5f, 0x6f, 0x6b, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x09, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x4f, 0x6b, 0x12, 0x21, 0x0a,
	0x0c, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x32, 0x90,
	0x02, 0x0a, 0x0d, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x12, 0x39, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x72, 0x12, 0x18, 0x2e,
	0x74, 0x69, 0x63, 0x6b, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x72,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x12, 0x2e, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x72,
	0x2e, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x12, 0x4a, 0x0a, 0x0f, 0x47,
	0x65, 0x74, 0x42, 0x61, 0x74, 0x63, 0x68, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x72, 0x73, 0x12, 0x1a,
	0x2e, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x72, 0x2e, 0x42, 0x61, 0x74, 0x63, 0x68, 0x54, 0x69, 0x63,
	0x6b, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x74, 0x69, 0x63,
	0x6b, 0x65, 0x72, 0x2e, 0x42, 0x61, 0x74, 0x63, 0x68, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x72, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x42, 0x0a, 0x0d, 0x53, 0x74, 0x72, 0x65, 0x61,
	0x6d, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x72, 0x73, 0x12, 0x1b, 0x2e, 0x74, 0x69, 0x63, 0x6b, 0x65,
	0x72, 0x2e, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x72, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x12, 0x2e, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x72, 0x2e, 0x54,
	0x69, 0x63, 0x6b, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x30, 0x01, 0x12, 0x34, 0x0a, 0x0b, 0x48,
	0x65, 0x61, 0x6c, 0x74, 0x68, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x12, 0x0d, 0x2e, 0x74, 0x69, 0x63,
	0x6b, 0x65, 0x72, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x16, 0x2e, 0x74, 0x69, 0x63, 0x6b,
	0x65, 0x72, 0x2e, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x42, 0x2b, 0x5a, 0x29, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f,
	0x64, 0x64, 0x64, 0x64, 0x61, 0x6f, 0x2f, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x72, 0x2d, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2d, 0x76, 0x32, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_ticker_proto_rawDescOnce sync.Once
	file_proto_ticker_proto_rawDescData = file_proto_ticker_proto_rawDesc
)

func file_proto_ticker_proto_rawDescGZIP() []byte {
	file_proto_ticker_proto_rawDescOnce.Do(func() {
		file_proto_ticker_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_ticker_proto_rawDescData)
	})
	return file_proto_ticker_proto_rawDescData
}

var file_proto_ticker_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_proto_ticker_proto_goTypes = []interface{}{
	(*Empty)(nil),               // 0: ticker.Empty
	(*GetTickerRequest)(nil),    // 1: ticker.GetTickerRequest
	(*BatchTickerRequest)(nil),  // 2: ticker.BatchTickerRequest
	(*BatchTickerResponse)(nil), // 3: ticker.BatchTickerResponse
	(*StreamTickerRequest)(nil), // 4: ticker.StreamTickerRequest
	(*TickerData)(nil),          // 5: ticker.TickerData
	(*HealthResponse)(nil),      // 6: ticker.HealthResponse
	nil,                         // 7: ticker.BatchTickerResponse.TickersEntry
}
var file_proto_ticker_proto_depIdxs = []int32{
	1, // 0: ticker.BatchTickerRequest.requests:type_name -> ticker.GetTickerRequest
	7, // 1: ticker.BatchTickerResponse.tickers:type_name -> ticker.BatchTickerResponse.TickersEntry
	1, // 2: ticker.StreamTickerRequest.subscriptions:type_name -> ticker.GetTickerRequest
	5, // 3: ticker.BatchTickerResponse.TickersEntry.value:type_name -> ticker.TickerData
	1, // 4: ticker.TickerService.GetTicker:input_type -> ticker.GetTickerRequest
	2, // 5: ticker.TickerService.GetBatchTickers:input_type -> ticker.BatchTickerRequest
	4, // 6: ticker.TickerService.StreamTickers:input_type -> ticker.StreamTickerRequest
	0, // 7: ticker.TickerService.HealthCheck:input_type -> ticker.Empty
	5, // 8: ticker.TickerService.GetTicker:output_type -> ticker.TickerData
	3, // 9: ticker.TickerService.GetBatchTickers:output_type -> ticker.BatchTickerResponse
	5, // 10: ticker.TickerService.StreamTickers:output_type -> ticker.TickerData
	6, // 11: ticker.TickerService.HealthCheck:output_type -> ticker.HealthResponse
	8, // [8:12] is the sub-list for method output_type
	4, // [4:8] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_proto_ticker_proto_init() }
func file_proto_ticker_proto_init() {
	if File_proto_ticker_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_ticker_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Empty); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_ticker_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTickerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_ticker_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BatchTickerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_ticker_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BatchTickerResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_ticker_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StreamTickerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_ticker_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TickerData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_ticker_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HealthResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_ticker_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_ticker_proto_goTypes,
		DependencyIndexes: file_proto_ticker_proto_depIdxs,
		MessageInfos:      file_proto_ticker_proto_msgTypes,
	}.Build()
	File_proto_ticker_proto = out.File
	file_proto_ticker_proto_rawDesc = nil
	file_proto_ticker_proto_goTypes = nil
	file_proto_ticker_proto_depIdxs = nil
}
